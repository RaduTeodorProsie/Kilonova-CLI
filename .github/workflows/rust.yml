name: Cross-platform Rust Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to release (e.g. v1.2.3)'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: kilo-CLI
            asset: kilo-CLI-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: kilo-CLI
            asset: kilo-CLI-macos-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: kilo-CLI.exe
            asset: kilo-CLI-windows-amd64.exe

    steps:
      - name: Checkout repository (fetch all tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests on macOS
        if: matrix.os == 'macos-latest'
        env:
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        run: cargo test --release --target ${{ matrix.target }}

      - name: Upload binary artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset }}
          path: target/${{ matrix.target }}/release/${{ matrix.bin }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TAG_NAME: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.ref_name || github.event.inputs.tag }}

    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: binaries

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          allow_updates: true

      - name: Upload release assets individually
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            binaries/kilo-CLI-linux-amd64
            binaries/kilo-CLI-macos-amd64
            binaries/kilo-CLI-windows-amd64.exe
          asset_name: |
            kilo-CLI-linux-amd64
            kilo-CLI-macos-amd64
            kilo-CLI-windows-amd64.exe
          asset_content_type: application/octet-stream
