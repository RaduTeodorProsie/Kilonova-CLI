name: Cross-platform Rust Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      TEST_USERNAME: ${{ vars.TEST_USERNAME }}
      TEST_PASSWORD: ${{ vars.TEST_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Test
        if: runner.os != 'Linux'
        run: cargo test

      - name: Zip binary
        run: |
          cd target/release
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            powershell Compress-Archive -Path kilo-CLI.exe -DestinationPath kilo-CLI.exe.zip
            mv kilo-CLI.exe.zip kilo-CLI_Windows.zip
          else
            zip kilo-CLI_${{ runner.os }}.zip kilo-CLI
          fi
        shell: bash
      
      - name: Upload zipped binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary-zip
          path: target/release/kilo-CLI_${{ runner.os }}.zip
